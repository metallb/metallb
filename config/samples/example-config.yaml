apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    # The peers section tells MetalLB what BGP routers to connect too. There
    # is one entry for each router you want to peer with.
    peers:
    - # The target IP address for the BGP session.
      peer-address: 10.0.0.1
      # The BGP AS number that MetalLB expects to see advertised by
      # the router.
      peer-asn: 64512
      # The BGP AS number that MetalLB should speak as.
      my-asn: 64512
      # (optional) the TCP port to talk to. Defaults to 179, you shouldn't
      # need to set this in production.
      peer-port: 179
      # (optional) The source IP address to use when establishing the BGP
      # session. The address must be configured on a local network interface.
      source-address: 10.0.0.2
      # (optional) The proposed value of the BGP Hold Time timer. Refer to
      # BGP reference material to understand what setting this implies.
      hold-time: 120s
      # (optional) The keepalive interval to be used in the BGP session.
      # By default it is set to hold-time / 3
      keepalive-time: 30s
      # (optional) The router ID to use when connecting to this peer. Defaults
      # to the node IP address. Generally only useful when you need to peer with
      # another BGP router running on the same machine as MetalLB.
      router-id: 1.2.3.4
      # (optional) Password for TCPMD5 authenticated BGP sessions
      # offered by some peers.
      password: "yourPassword"
      # (optional) A reference to a BFD profile defined in the bfd-profiles section.
      # BFD is supported only with the experimental FRR mode.
      bfdProfile: "bfdProfile1"
      # (optional) Whether eBGP multihop is permitted. Note that it is always
      # on in the native BGP mode
      ebgp-multihop: true
      # (optional) The nodes that should connect to this peer. A node
      # matches if at least one of the node selectors matches. Within
      # one selector, a node matches if all the matchers are
      # satisfied. The semantics of each selector are the same as the
      # label- and set-based selectors in Kubernetes, documented at
      # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/.
      # By default, all nodes are selected.
      node-selectors:
      - # Match by label=value
        match-labels:
          kubernetes.io/hostname: prod-01
        # Match by 'key OP values' expressions
        match-expressions:
        - key: beta.kubernetes.io/arch
          operator: In
          values: [amd64, arm]

    # The address-pools section lists the IP addresses that MetalLB is
    # allowed to allocate, along with settings for how to advertise
    # those addresses over BGP once assigned. You can have as many
    # address pools as you want.
    address-pools:
    - # A name for the address pool. Services can request allocation
      # from a specific address pool using this name, by listing this
      # name under the 'metallb.universe.tf/address-pool' annotation.
      name: my-ip-space
      # Protocol can be used to select how the announcement is done.
      # Supported values are bgp and layer2.
      protocol: bgp
      
      # A list of IP address ranges over which MetalLB has
      # authority. You can list multiple ranges in a single pool, they
      # will all share the same settings. Each range can be either a
      # CIDR prefix, or an explicit start-end range of IPs.
      addresses:
      - 198.51.100.0/24
      - 192.168.0.150-192.168.0.200
      # (optional) If true, MetalLB will not allocate any address that
      # ends in .0 or .255. Some old, buggy consumer devices
      # mistakenly block traffic to such addresses under the guise of
      # smurf protection. Such devices have become fairly rare, but
      # the option is here if you encounter serving issues.
      avoid-buggy-ips: true
      # (optional, default true) If false, MetalLB will not automatically
      # allocate any address in this pool. Addresses can still explicitly
      # be requested via loadBalancerIP or the address-pool annotation.
      auto-assign: false
      # (optional) A list of BGP advertisements to make, when
      # protocol=bgp. Each address that gets assigned out of this pool
      # will turn into this many advertisements. For most simple
      # setups, you'll probably just want one.
      #
      # The default value for this field is a single advertisement with
      # all parameters set to their respective defaults.
      bgp-advertisements:
      - # (optional) How much you want to aggregate up the IP address
        # before advertising. For example, advertising 1.2.3.4 with
        # aggregation-length=24 would end up advertising 1.2.3.0/24.
        # For the majority of setups, you'll want to keep this at the
        # default of 32, which advertises the entire IP address
        # unmodified.
        aggregation-length: 32
        # (optional) How much you want to aggregate up the IPv6 address
        # before advertising. For example, advertising 2001:0db8:85a3:0000:0000:8a2e:0370:7334
        # with aggregation-length-v6=64 would end up advertising 2001:0db8:85a3:0000:0000:0000:0000:0000/64.
        # For the majority of setups, you'll want to keep this at the
        # default of 128, which advertises the entire IP address
        # unmodified.
        aggregation-length-v6: 64
        # (optional) The value of the BGP "local preference" attribute
        # for this advertisement. Only used with IBGP peers,
        # i.e. peers where peer-asn is the same as my-asn.
        localpref: 100
        # (optional) BGP communities to attach to this
        # advertisement. Communities are given in the standard
        # two-part form <asn>:<community number>. You can also use
        # alias names (see below).
        communities:
        - 64512:1
        - no-export
    # (optional) BGP community aliases. Instead of using hard to
    # read BGP community numbers in address pool advertisement
    # configurations, you can define alias names here and use those
    # elsewhere in the configuration. The "no-export" community used
    # above is defined below.
    bgp-communities:
      # no-export is a well-known BGP community that prevents
      # re-advertisement outside of the immediate autonomous system,
      # but people don't usually recognize its numerical value. :)
      no-export: 65535:65281
    bfd-profiles:
    # The unique name to associate the BFD profile to, and to reference it
    # from a peer entry. BFD is only available in FRR mode.
    - name: bfdprofilename
      # (optional) the minimum interval that this system is capable of 
      # receiving control packets in milliseconds. The default value is 300 milliseconds
      receive-interval: 280
      # (optional) The minimum transmission interval (less jitter) 
      # that this system wants to use to send BFD control packets in
      # milliseconds. Defaults to 300ms
      transmit-interval: 270
      # (optional) Configures the minimal echo receive transmission
      # interval that this system is capable of handling in milliseconds.
      # Defaults to 50ms
      echo-interval: 62
      # (optional) enables or disables the echo transmission mode. 
      # This mode is disabled by default, and not supported on multi
      # hops setups.
      echo-mode: false
      # (optional) Mark session as passive: a passive session will not
      # attempt to start the connection and will wait for control packets
      # from peer before it begins replying.
      passive-mode: false
      # (optional) For multi hop sessions only: configure the minimum 
      # expected TTL for an incoming BFD control packet.
      minimum-ttl: 254
      # (optional) Configures the detection multiplier to determine 
      # packet loss. The remote transmission interval will be multiplied 
      # by this value to determine the connection loss detection timer.
      detect-multiplier: 200
